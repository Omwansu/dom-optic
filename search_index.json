[
["fluorescence.html", "Chapter 4 Fluorescence 4.1 What is a EEM 4.2 PARAFAC 4.3 Fluorescence of DOM: theoretical and mathematical background 4.4 R code and study case 4.5 Using R pipeline 4.6 Conclusion", " Chapter 4 Fluorescence 4.1 What is a EEM Figure 4.1: Example of an excitation-emission fluorescence matrix (EEM). The diagonal structure with high fluorescence corresponds to the first order of Rayleigh scattering. 4.2 PARAFAC The seminal paper of (Colin A. Stedmon, Markager, and Bro 2003) put at the forefront the use of parallel factor analysis (PARAFAC) to aid the characterization of fluorescent DOM. Briefly, this three-way technique allows the decomposition of complex DOM fluorescence signals contained in the excitation-emission matrix (EEM, Fig. 1) into a set of individual chemical components and provides estimations of their relative contribution to the total fluorescence (Bro 1997; Fellman, Hood, and Spencer 2010; Colin A. Stedmon, Markager, and Bro 2003). The PARAFAC model is described as (Bro 1997; Harshman 1970): \\[\\begin{equation} x_{ijk} = \\sum_{f=1}^{F} a_{ij}b_{jf}c_{kf} + e_{ijk} \\end{equation}\\] where \\(i = 1, ..., I\\); \\(j = 1, ..., J\\); \\(k = 1, ..., K\\), \\(x_{ijk}\\) is the intensity of fluorescence of the the \\(i^{th}\\) sample at the \\(j^{th}\\) emission wavelength at the \\(k^{th}\\) excitation wavelength. \\(a_{ij}\\) is directly proportional to the concentration of the \\(f^{th}\\) component in the sample \\(i\\). Although PARAFAC gained a lot of attention in environmental sciences, it is also widely used in other research fields such as medical, pharmaceutical, food, social and information sciences (Murphy et al. 2013). Until today, more than 1850 published scientific papers relying on PARAFAC have been identified on Web of Science. Although PARAFAC was made easier using the drEEM MATLAB toolbox (Murphy et al. 2013), preprocessing of EEMs prior to the analysis is still not straightforward. EEM preprocessing is an important part of PARAFAC since it aims to correct any systematic bias in the measurements and to remove signal unrelated to DOM fluorescence (Murphy et al. 2013). Biased models can be produced if these steps are not conducted carefully (see Hiriart-Baer, Diep, and Smith (2008) where scattering fluorescence signals have been modeled and wrongly interpreted). Such data processing is cumbersome as it involves many steps (Colin A Stedmon and Bro 2008; Murphy et al. 2013) which are usually executed by hand or within in-house scripting and therefore prone to introduce errors. Another important drawback limiting effective preprocessing of EEMs arise from the wide variety of file formats provided by the different manufacturers of spectrofluorometers that makes data importation difficult to generalize. Possibly reflecting these difficulties, it was recently pointed out that characterization of DOM using fluorescence spectroscopy is still not routinely included in ecological studies (Fellman, Hood, and Spencer 2010). Given the increasing interest for fluorescence spectroscopy in ecology, tools are needed to unify the main preprocessing steps needed for further analyzes such as PARAFAC or metric calculations. The purpose of the eemR R package is to provide a rapid and an elegant interface to perform preprocessing of EEMs as well as to extract common fluorescence-based metrics proposed in the literature to obtain quantitative information about the DOM pool. This paper presents theoretical and mathematical background of the main PARAFAC preprocessing steps and metric calculations with concrete code examples. 4.3 Fluorescence of DOM: theoretical and mathematical background Let us define \\(X\\), an EEM of fluorescence intensities measured along a vector of excitation wavelengths (\\(ex\\)) at emission wavelengths (\\(em\\)). Usually, \\(ex\\) and \\(em\\) vary, respectively, between 200-500 nm and 220-600 nm (Fig. 1). \\(X_{ex, em}\\) denotes the fluorescence intensity measured at excitation \\(ex\\) and emission \\(em\\) (ex.: \\(X_{250, 400}\\)). The following sections present the main correction steps for fluorescence data aiming to correct any systematic bias in the measurements and remove signal unrelated to fluorescence prior to any analysis. Correction Description Blank subtraction Subtract a pure water sample blank from the fluorescence data to help the removal of Raman and Rayleigh scattering peaks. Scattering removal Remove the the so-called scattering bands caused by first and second order of Raman and Rayleigh scattering. Inner-filter effect correction Correct for reabsorption of light occurring at both the excitation and emission wavelengths during measurement. Raman normalization Remove the dependency of fluorescence intensities from the measuring equipments thus allowing cross-study comparisons. 4.3.1 Scattering correction Rayleigh and Raman scattering are optical processes by which some of the incident energy can be absorbed and converted into vibrational and rotational energy (Lakowicz 2006). The resulting scattered energy produce the so-called scattering bands which are visually easily identifiable (Figs. 1 and 2). Given that both types of scattering are repeated across EEMs, it is important to remove such artifacts prior to analysis (Bahram et al. 2006; Zepp, Sheldon, and Moran 2004). Figure 4.2: Emission fluorescence emitted at excitation \\(ex = 350\\). First order of Rayleigh and Raman scattering regions are identified in blue and red. First order of Rayleigh scattering is defined as the region where emission is equal to excitation (\\(em = ex\\)) causing a diagonal band in the EEM (Fig. 1) whereas the second order of Rayleigh scattering occurs at two times the emission wavelength of the primary peak (\\(em = 2ex\\)). For water, Raman scattering occurs at a wavenumber 3 600 \\(cm^{-1}\\) (or \\(3.6 \\times 10^{10} nm^{-1}\\)) lower than the incident excitation wavenumber (Lakowicz 2006). Mathematically, first order Raman scattering is defined as follow: \\[\\begin{equation} \\text{Raman}_{\\text{1st}} = -\\frac{ex}{0.00036 ex - 1} \\label{eq:raman1} \\end{equation}\\] where \\(ex\\) is the incident excitation wavelength (nm). Second order Raman scattering is then simply defined as: \\[\\begin{equation} \\text{Raman}_{\\text{2nd}} = -\\frac{2ex}{0.00036 ex - 1} \\label{eq:raman2} \\end{equation}\\] Different interpolation techniques have been proposed to eliminate scattering (Zepp, Sheldon, and Moran 2004; Bahram et al. 2006). However, it is a common practice to simply remove the scattering-bands by inserting missing values (Fig. 3) at the corresponding positions (Murphy et al. 2013; Colin A Stedmon and Bro 2008). 4.3.2 Inner-filter effect correction The inner-filter effect (IFE) is an optical phenomenon of reabsorption of emitted light and occurs particularly in highly concentrated samples (Fig. 4). IFE is known to cause underestimation of fluorescence intensities especially at shorter wavelengths and even to alter the shape and the positioning of fluorescence spectra by shifting peak positions toward lower wavelengths (Fig. 4) with increasing concentration (Mobed et al. 1996; Kothawala et al. 2013). However, it was shown that the loss of fluorescence due to IFE could be estimated from absorbance spectra measured on the same sample using Equation \\ref{eq:ife} (Ohno 2002; Parker and Barnes 1957): \\[\\begin{equation} X_0 = \\frac{X}{10^{-b(A_{ex} + A_{em})}} \\label{eq:ife} \\end{equation}\\] where \\(X_0\\) is the fluorescence in the absence of IFE, \\(X\\) is the measured fluorescence intensity, \\(b\\) is half the cuvette pathlength (usually 0.5 cm) for excitation and emission absorbance, \\(A_{ex}\\) is the absorbance at the excitation wavelength \\(ex\\) and \\(A_{em}\\) the absorbance at the emission wavelength \\(em\\) (Fig. 4B). It was recently shown that IFE corrected algebraically was not appropriate when total absorbance, defined as \\(A_{\\text{total}} = A_{\\text{ex}} + A_{\\text{em}}\\) (see Equation \\ref{eq:ife}), is greater than 1.5 (Kothawala et al. 2013). Under this circumstance, a two-fold dilution of the sample has been recommended. If this happen, a warning message will be displayed by the package during the correction process. 4.3.3 Raman calibration The same DOM sample measured on different spectrofluorometers (or even the same but with different settings) can give important differences in fluorescence intensities (Lawaetz and Stedmon 2009; Paula G. Coble, Schultz, and Mopper 1993). The purpose of the Raman calibration is to remove the dependency of fluorescence intensities on the measuring equipment, thus allowing cross-study comparisons. Given that the Raman peak position of a water sample is located at a fixed position, (Lawaetz and Stedmon 2009) proposed to use the Raman integral of a blank-water sample measured the same day as the EEM to perform calibration. Moreover, the area of the Raman peak (\\(A_{\\text{rp}}\\), Fig. 5) is defined as the area of the emission profile between 371 and 428 nm at a fixed excitation of 350 nm (Lawaetz and Stedmon 2009). Mathematically, the value of \\(A_{\\text{rp}}\\) is calculated using the following integral (Equation\\ref{eq:arp}): \\[\\begin{equation} A_{\\text{rp}} = \\int\\limits_{\\lambda_{\\text{em}371}}^{\\lambda_{\\text{em}428}} W_{350, \\lambda} d\\lambda \\label{eq:arp} \\end{equation}\\] where \\(W_{350, \\lambda}\\) is the fluorescence intensity of a pure water sample (preferably deionized and ultraviolet exposed, Lawaetz and Stedmon (2009)) at excitation \\(ex = 350\\) nm and at emission \\(em = \\lambda\\) nm. Each values of the EEM \\(X\\) are then normalized using the scalar value of \\(A_{\\text{rp}}\\) accordingly to Equation @ref(eq:raman_normalisation): \\[\\begin{equation} X_0 = \\frac{X}{A_{\\text{rp}}} \\label{eq:raman_normalisation} \\end{equation}\\] where \\(X_0\\) is the normalized EEM with fluorescence intensities now expressed as Raman Units (R.U.), \\(X\\) are the unnormalized measured fluorescence intensities and \\(A_{\\text{rp}}\\) is the Raman peak area. 4.3.4 Metrics A wide range of different metrics obtained from EEMs have been proposed to characterize the DOM pool in aquatic ecosystems. These metrics extract quantitative information in specific regions (wavelengths) in EEMs. The following sections present an overview of the principal metrics supported by the package. 4.3.4.1 Coble’s peaks The following table presents the five major fluorescent components identified by (Paula G Coble 1996) in marine EEMs. Peaks B and T represent protein-like compounds (tyrosine and tryptophane), peaks A and C are indicators of humic-like components whereas peak M was associated to marine humic-like fluorescence. Peak Ex (nm) Em (nm) B 275 310 T 275 340 A 260 380-460 M 312 380-420 C 350 420-480 4.3.4.2 Fluorescence, humification and biological indices Three main indices have been proposed to trace the diagnostic state of the DOM pool in aquatic ecosystems. The fluorescence index (FI) was shown to be a good indicator of the general source and aromaticity of DOM in lakes, streams and rivers (McKnight et al. 2001). This index is calculated as the ratio of fluorescence at emission 450 nm and 500 nm, at fixed excitation of 370 nm (Equation \\ref{eq:fi}). \\[\\begin{equation} \\text{FI} = \\frac{X_{370, 450}}{X_{370, 500}} \\label{eq:fi} \\end{equation}\\] The humification index (HIX) is a measure of the complexity and the aromatic nature of DOM (Ohno 2002). HIX calculated as the ratio of the sum of the fluorescence between 435 and 480 nm and between 300 and 345 nm at a fixed excitation of 254 nm (Equation \\ref{eq:hix}). \\[\\begin{equation} \\text{HIX} = \\frac{\\sum\\limits_{em = 435}^{480} X_{254, em}}{\\sum\\limits_{em = 300}^{345} X_{254, em}} \\label{eq:hix} \\end{equation}\\] The biological index (BIX) is a measure to characterize biological production of DOM (Huguet et al. 2009). BIX is calculated at excitation 310 nm, by dividing the fluorescence intensity emitted at emission 380 nm and at 430 nm (Equation (\\ref{eq:bix})). \\[\\begin{equation} \\text{BIX} = \\frac{X_{310, 380}}{X_{310, 430}} \\label{eq:bix} \\end{equation}\\] 4.4 R code and study case Main preprocessing steps using the eemR package are illustrated using a subset of three EEMs from (Massicotte and Frenette 2011). Briefly, these EEMs (see Fig. 1 for an example) have been sampled in the St. Lawrence River, one of the largest rivers in North America. Fluorescence matrices of DOM were measured on a Cary Eclipse spectrofluorometer (Varian, Mississauga, Ontario, Canada) over excitation wavelengths between 220 and 450 nm (5-nm increment) and emission wavelengths between 230 and 600 nm (2-nm increment). All functions from the package start with the prefix 'eem_'. library(eemR) ls(&quot;package:eemR&quot;) ## [1] &quot;absorbance&quot; &quot;eem_bind&quot; ## [3] &quot;eem_biological_index&quot; &quot;eem_coble_peaks&quot; ## [5] &quot;eem_cut&quot; &quot;eem_export_matlab&quot; ## [7] &quot;eem_extract&quot; &quot;eem_fluorescence_index&quot; ## [9] &quot;eem_humification_index&quot; &quot;eem_inner_filter_effect&quot; ## [11] &quot;eem_names&quot; &quot;eem_names&lt;-&quot; ## [13] &quot;eem_raman_normalisation&quot; &quot;eem_read&quot; ## [15] &quot;eem_read_parafac&quot; &quot;eem_remove_blank&quot; ## [17] &quot;eem_remove_scattering&quot; &quot;eem_set_wavelengths&quot; 4.4.1 Data importation and plotting Importation of EEMs into R is done using the eem_read() function. Given that fluorescence files are dependent on the spectrofluorometer used, eemR will determine automatically from which manufacturer the files are from and load them accordingly. file &lt;- system.file(&quot;extdata/cary/scans_day_1&quot;, package = &quot;eemR&quot;) eems &lt;- eem_read(file) The generic summary() function displays useful information such as: (1) the wavelength ranges used in both emission and excitation modes, (2) the manufacturer from which the file was read and (3) the state of the EEM which indicate which corrections have been applied. summary(eems) ## sample ex_min ex_max em_min em_max is_blank_corrected ## 1 nano 220 450 230 600 FALSE ## 2 sample1 220 450 230 600 FALSE ## 3 sample2 220 450 230 600 FALSE ## 4 sample3 220 450 230 600 FALSE ## is_scatter_corrected is_ife_corrected is_raman_normalized manufacturer ## 1 FALSE FALSE FALSE Cary Eclipse ## 2 FALSE FALSE FALSE Cary Eclipse ## 3 FALSE FALSE FALSE Cary Eclipse ## 4 FALSE FALSE FALSE Cary Eclipse A surface plot of EEMs is made using the plot(x, which = 1) function where which is the index of the EEM to be plotted (see Fig. 3). plot(eems, which = 3) Interactive plots using a simple shiny app can be lunched to interactively browse EEMs. plot(eems, interactive = TRUE) 4.4.2 Blank subtraction Subtraction of a water blank from the measured samples may help to reduce scattering (Murphy et al. 2013; Colin A Stedmon and Bro 2008). In eemR, this is done using the eem_remove_blank(eem, blank) function where eem is a list of EEMs and blank is a water blank. file &lt;- system.file(&quot;extdata/cary/scans_day_1&quot;, &quot;nano.csv&quot;, package = &quot;eemR&quot;) blank &lt;- eem_read(file) eems &lt;- eem_remove_blank(eems, blank) 4.4.3 Raman and Rayleigh scattering removal Scattering removal (Equation \\ref{eq:raman1} and Equation \\ref{eq:raman2}) is performed using the eem_remove_scattering(eem, type, order, width) function where eem is a list of EEMs, type is the scattering type (raman or rayleigh), order is the order of the scattering (1 or 2) and width the width in nanometers of the slit windows to be removed. In the following example, only first order and Raman and Rayleigh scattering are removed using a bandwidth of 10 nm (Fig. 3). eems &lt;- eem_remove_scattering(eems, &quot;rayleigh&quot;, 1, 10) %&gt;% eem_remove_scattering(&quot;raman&quot;, 1, 10) plot(eems, which = 3) Figure 4.3: Fluorescence profile of a pure water sample at excitation 350 nm between 300 and 450 nm emission. The area of the Raman peak is identified by the shaded polygon and is calculated using Equation xxx. 4.4.4 Inner-filter effect correction IFE correction requires the use of absorbance data (Equation \\ref{eq:ife}). For each EEM, an absorbance spectra must be supplied. The easiest way to provide absorbance is to use a data frame with column names matching EEMs names. In the following data frame, the first column represents the wavelengths at which absorbance have been measured whereas the remaining columns are absorbance spectra for sample1, sample2 and sample3. data(&quot;absorbance&quot;) head(absorbance) ## wavelength sample1 sample2 sample3 ## 1 190 0.89674 1.02927 1.19405 ## 2 191 0.84894 0.96381 1.13721 ## 3 192 0.77267 0.85339 1.04520 ## 4 193 0.70967 0.75627 0.96782 ## 5 194 0.65459 0.67145 0.90092 ## 6 195 0.61371 0.60745 0.85054 Note that EEM names can be obtained using the eem_sample_names() function. eem_names(eems) ## [1] &quot;nano&quot; &quot;sample1&quot; &quot;sample2&quot; &quot;sample3&quot; IFE correction is performed using the eem_inner_filter_effect(eem, absorbance, pathlength) function where eem is a list of EEMs, absorbance is a data frame containing absorbance spectra and pathlength is the absorbance cuvette pathlength expressed in \\(cm\\) (Fig. 4B). For each EEM contained in eem, the ranges spanned by the IFE correction factors and total absorbance \\(A_{\\text{total}}\\) (Equation \\ref{eq:ife}) are displayed to the user. This can serve as diagnostic tool to determine if the mathematical correction was the appropriate method to use to handle IFE. eems &lt;- eem_inner_filter_effect(eem = eems, absorbance = absorbance, pathlength = 1) ## Warning: Absorbance spectrum for nano was not found. Returning uncorrected ## EEM. ## Range of IFE correction factors: 0.6433 0.989 ## Range of total absorbance (Atotal) : 0.0096 0.3832 ## Range of IFE correction factors: 0.7619 0.994 ## Range of total absorbance (Atotal) : 0.0053 0.2362 ## Range of IFE correction factors: 0.4217 0.9843 ## Range of total absorbance (Atotal) : 0.0138 0.75 plot(eems, which = 3) Fig. 4 presents intermediate results obtained for the correction of sample3. Note the nonlinearity of the correction with higher effect at lower wavelengths (bottom-left corner in panel C). The corrected EEM is presented in Fig. 4D which is the result of the operation of dividing matrix in 4A by 4C. 4.4.5 Raman normalization The last step of the correction process consist to calibrate fluorescence intensities using the Raman scatter peak of water (Lawaetz and Stedmon 2009). This is performed using the eem_raman_normalisation(eem, blank) function where eem is a list of EEMs and blank is a water blank measured the same day. Here, the same water-blank is used for the three EEMs. Note that the value of the Raman area (\\(A_{\\text{rp}}\\), Equation\\ref{eq:arp}) is printed. eems &lt;- eem_raman_normalisation(eems, blank) ## Raman area: 9.540904 ## Raman area: 9.540904 ## Raman area: 9.540904 plot(eems, which = 3) At this stage, all corrections have been performed and EEMs are ready to be exported into MATLAB for PARAFAC analysis. The state of the EEMs can be verified using the summary() function. summary(eems) ## sample ex_min ex_max em_min em_max is_blank_corrected ## 1 nano 220 450 230 600 FALSE ## 2 sample1 220 450 230 600 TRUE ## 3 sample2 220 450 230 600 TRUE ## 4 sample3 220 450 230 600 TRUE ## is_scatter_corrected is_ife_corrected is_raman_normalized manufacturer ## 1 TRUE FALSE FALSE Cary Eclipse ## 2 TRUE TRUE TRUE Cary Eclipse ## 3 TRUE TRUE TRUE Cary Eclipse ## 4 TRUE TRUE TRUE Cary Eclipse 4.4.6 Exporting to MATLAB The drEEM MATLAB toolbox (Murphy et al. 2013) used to perform PARAFAC analysis requires data in a specific format (structure). The eem_export_matlab(file, ...) function can be used to export corrected EEMs into a PARAFAC ready format. The first file argument is the mat file where to export the structure and the second argument ... is one or more eem object. eem_export_matlab(&quot;myfile.mat&quot;, eems) Once exported, one can simply import the generated mat file in MATLAB using load('myfile.mat');. 4.4.7 Metric extraction Coble’s peaks can be extracted using the eem_coble_peaks(eem) function. Note that for peaks A, M, C, the maximum fluorescence intensity in the range of emission region is returned. file &lt;- system.file(&quot;extdata/cary/scans_day_1&quot;, package = &quot;eemR&quot;) eems &lt;- eem_read(file) eem_coble_peaks(eems, verbose = FALSE) ## sample b t a m c ## 1 nano 0.8745673 0.1401188 0.140175 0.09653326 0.1255788 ## 2 sample1 1.5452981 1.0603312 3.731836 2.42409567 1.8149415 ## 3 sample2 1.2629968 0.6647042 1.583489 1.02359302 0.7709074 ## 4 sample3 1.4740862 1.3162812 8.416034 6.06335506 6.3179129 Fluorescence (FI), humification (HIX) and biological (BIX) indices can be extracted as follow. eem_fluorescence_index(eems, verbose = FALSE) ## sample fi ## 1 nano -0.5932057 ## 2 sample1 1.2647823 ## 3 sample2 1.4553330 ## 4 sample3 1.3294132 eem_humification_index(eems, verbose = FALSE) ## sample hix ## 1 nano 0.5568136 ## 2 sample1 6.3795618 ## 3 sample2 4.2548483 ## 4 sample3 13.0246234 eem_biological_index(eems, verbose = FALSE) ## sample bix ## 1 nano 2.6812045 ## 2 sample1 0.7062640 ## 3 sample2 0.8535423 ## 4 sample3 0.4867927 It should be noted that different excitation and emission wavelengths are often used to measure EEMs. Hence, it is possible to have mismatch between measured wavelengths and wavelengths used to calculate specific metrics. In these circumstances, EEMs are interpolated using the the pracma package (Borchers 2015). A message warning the user will be displayed if data interpolation is performed. This behavior can be controlled using the verbose = TRUE/FALSE parameter. 4.5 Using R pipeline Note that it is also possible to use the magrittr pipe line with most functions from eemR. library(magrittr) file &lt;- system.file(&quot;extdata/cary/scans_day_1/&quot;, package = &quot;eemR&quot;) file %&gt;% eem_read(recursive = TRUE) %&gt;% eem_raman_normalisation() %&gt;% eem_remove_scattering(type = &quot;raman&quot;, order = 1, width = 10) %&gt;% eem_remove_scattering(type = &quot;rayleigh&quot;, order = 1, width = 10) %&gt;% plot(2) 4.6 Conclusion eemR provides a flexible interface for manipulating and preprocessing fluorescence matrices based on theoretical and mathematical foundations of fluorescence spectroscopy (Lakowicz 2006). Furthermore, this R package removes the drawbacks associated with EEM manipulation (dependent on spectrofluorometer manufacturer) and unifies the most important steps involved in EEM preparation in order to correct and remove systematic bias in fluorescence measurements. This will likely contribute to promote the use of fluorescence spectroscopy in various fields. "]
]
